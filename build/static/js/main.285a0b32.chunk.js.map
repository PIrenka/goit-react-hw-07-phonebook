{"version":3,"sources":["components/ContactForm/stylesContactForm.module.css","components/ContactList/stylesContactList.module.css","components/App/App.module.css","components/Label/stylesLabel.module.css","redux/phoneBook/actions.js","redux/phoneBook/reducer.js","redux/store.js","components/Label/Label.jsx","redux/phoneBook/phoneApiOperations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/phoneBook/phoneSelector.js","components/App/App.jsx","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","items","createReducer","actions","_","payload","state","filter","id","error","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","phoneBookReducer","devTools","process","Label","title","children","className","styles","label","axios","defaults","baseURL","ContactForm","name","phone","nameId","uuid","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","existName","props","some","item","existPhoneNumber","window","alert","reset","onSubmit","this","form","type","placeholder","onChange","pattern","required","btnAddContact","Component","connect","dispatch","contact","post","then","data","catch","addContact","ContactListItem","onDeleteContact","contactListItem","onClick","btnDelete","normalizedFilter","toLowerCase","includes","contactId","delete","console","log","length","map","key","currentTarget","getLoading","App","createSelector","allContacts","getContacts","isLoading","LinearProgress","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.285a0b32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnAddContact\":\"stylesContactForm_btnAddContact__ClwyI\",\"form\":\"stylesContactForm_form__2KH1f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"stylesContactList_btnDelete__1JRng\",\"contactListItem\":\"stylesContactList_contactListItem__2n1FG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__HVvpw\",\"Form\":\"App_Form__p_evd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"stylesLabel_label__1hN4e\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nexport const getContactsError = createAction('contacts/getContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContacts = createAction('contacts/filter');\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\n// const items = createReducer([], {\r\n//   'contacts/addContactSuccess': (state, action) => [...state, action.payload],\r\n//   // [addContact]: (state, action) => [...state, action.payload],\r\n//   [deleteContact]: (state, action) =>\r\n//     state.filter(({ id }) => id !== action.payload),\r\n// });\r\n\r\n// const filter = createReducer('', {\r\n//   [filterContacts]: (_, action) => action.payload,\r\n// });\r\n\r\n// export default combineReducers({ items, filter });\r\n\r\nconst items = createReducer([], {\r\n  [actions.getContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [actions.deleteContactSuccess]: (state, { payload }) => [\r\n    ...state.filter(({ id }) => id !== payload),\r\n  ],\r\n});\r\n\r\nconst error = createReducer(null, {});\r\nconst filter = createReducer('', {\r\n  [actions.filterContacts]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.getContactsRequest]: () => true,\r\n  [actions.getContactsSuccess]: () => false,\r\n  [actions.getContactsError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n  [actions.filterContacts]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n  loading,\r\n});\r\n","import {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport phoneBookReducer from './phoneBook/reducer';\r\n\r\n// const myMiddleware = store => next => action => {\r\n//   console.log('my midleware... and show action-->', action);\r\n//   next(action);\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // myMiddleware,\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phoneBookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './stylesLabel.module.css';\r\n\r\nconst Label = ({ title, children }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      <h3>{title}</h3>\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\nLabel.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","// import { addContact } from './phoneApiOperations';\r\n\r\nimport * as actions from './actions';\r\n\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nexport const getContacts = () => dispatch => {\r\n  dispatch(actions.getContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.getContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.getContactsError(error)));\r\n};\r\n\r\nexport const addContact = ({ name, phone }) => dispatch => {\r\n  const contact = { name, phone };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Label from '../Label';\r\n\r\nimport { addContact } from '../../redux/phoneBook/phoneApiOperations';\r\n\r\nimport styles from './stylesContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    phone: '',\r\n  };\r\n  nameId = uuid();\r\n\r\n  handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const existName = this.props.items.some(\r\n      item => item.name === this.state.name,\r\n    );\r\n    const existPhoneNumber = this.props.items.some(\r\n      item => item.phone === this.state.phone,\r\n    );\r\n    if (existName || existPhoneNumber) {\r\n      window.alert(\r\n        `LocalHost:3000 says contact with such name or phone number is already exists`,\r\n      );\r\n      this.reset();\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    return this.setState({ name: '', phone: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={styles.form}>\r\n        <Label title=\"Name\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChangeForm}\r\n            id={this.nameId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <Label title={'Number'}>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter phone number\"\r\n            value={this.state.phone}\r\n            onChange={this.handleChangeForm}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </Label>\r\n        <button type=\"submit\" className={styles.btnAddContact}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => {\r\n  return { items };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, phone }) => dispatch(addContact({ name, phone })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import styles from './stylesContactList.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../redux/phoneBook/phoneApiOperations';\r\n\r\nconst ContactListItem = ({ id, name, phone, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.contactListItem}>\r\n      {name}: {phone}\r\n      <button onClick={() => onDeleteContact(id)} className={styles.btnDelete}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  console.log(contacts);\r\n\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, id, phone }) => (\r\n        <ContactListItem\r\n          {...{ name, id, phone }}\r\n          onDeleteContact={onDeleteContact}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import styles from './stylesFilter.module.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phoneBook/actions';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={onChange}\r\n      placeholder=\"Enter name for search\"\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.filterContacts(e.currentTarget.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const getUniqContact = createSelector(\r\n  [getFilter, getAllContacts],\r\n  (filter, allContacts) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { Component } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport ContactForm from '../ContactForm';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getContacts } from '../../redux/phoneBook/phoneApiOperations';\r\nimport { getLoading } from '../../redux/phoneBook/phoneSelector';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles.App}>\r\n        <h1>Phonebook</h1>\r\n        {this.props.isLoading && <LinearProgress />}\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getContacts: () => dispatch(getContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nimport store from './redux/store';\r\nimport App from './components/App';\r\n\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}